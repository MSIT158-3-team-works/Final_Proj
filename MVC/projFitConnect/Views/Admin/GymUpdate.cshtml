@{
    ViewData["Title"] = "GymUpdate";
}
@section Styles {
    <style>
        .main {
            width: 92%;
            margin: auto;
        }
    </style>
}
<h1 style="padding-left:64px;">修改場館</h1>
<div class="main">
    <div class="row">
        <div class="col-md-6">
            <div class="mb-3">
                <h3>請輸入場館名</h3>
                <div class="input-group">
                    <span class="input-group-text" id="basic-addon1">場館名</span>
                    <input type="text" class="form-control" id="GymName" aria-describedby="basic-addon1" name="GymName">
                </div>
            </div>
            <div class="mb-3">
                <h3>場館照片</h3>
                <img src=" " id="GymPhotoimage" class="img-fluid rounded">
            </div>
            <div class="mb-3">
                <h3>上傳場館照片</h3>
                <input class="form-control form-control-sm" id="GymPhoto" type="file" name="UploadedGymPhoto">
            </div>

        </div>

        <div class="col-md-6">


            <div class="mb-3">
                <h3>營業時間</h3>
                <div class="input-group mb-3">
                    <select class="form-select" aria-label="Default select example" id="start_time" name="start_time">
                        <option selected disabled>開始時間</option>
                    </select>
                    <select class="form-select" aria-label="Default select example" id="end_time" name="end_time">
                        <option selected disabled>結束時間</option>
                    </select>
                </div>
            </div>

            <div class="mb-3">
                <h3>縣市   地區</h3>
                <div class="input-group mb-3">
                    <select class="form-select" aria-label="Default select example" id="citys" name="city">
                    </select>
                    <select class="form-select" aria-label="Default select example" id="regions" name="GymRegion">
                    </select>
                </div>
            </div>

            <div class="mb-3">
                <h3>請輸入電話</h3>
                <div class="input-group">
                    <span class="input-group-text" id="basic-addon1">電話</span>
                    <input type="text" class="form-control" id="GymPhone" aria-describedby="basic-addon1" name="GymPhone">
                </div>
            </div>

            <div class="mb-3">
                <h3>請輸入地址</h3>
                <div class="input-group">
                    <span class="input-group-text" id="basic-addon1">地址</span>
                    <input type="text" class="form-control" id="GymAddress" aria-describedby="basic-addon1" name="GymAddress">
                </div>
            </div>

            <div class="mb-3">
                <h3>請輸入停車場資訊</h3>
                <div class="input-group">
                    <span class="input-group-text" id="basic-addon1">停車場</span>
                    <input type="text" class="form-control" id="GymPark" aria-describedby="basic-addon1" name="GymPark">
                </div>
            </div>

            <div class="mb-3">
                <h3>請輸入交通資訊</h3>
                <div class="input-group">
                    <span class="input-group-text" id="basic-addon1">交通</span>
                    <input type="text" class="form-control" id="GymTraffic" aria-describedby="basic-addon1" name="GymTraffic">
                </div>
            </div>

            <div class="mb-3">
                <h3>請輸入場館簡介</h3>
                <div class="input-group">
                    <span class="input-group-text">場館簡介</span>
                    <textarea class="form-control" id="GymDescribe" name="GymDescribe"></textarea>
                </div>
            </div>
            <br />
            <button type="button" class="btn btn-primary" id="btnsubmit" data-bs-toggle="modal" data-bs-target="#staticBackdrop">送出並修改</button>
            @* <button type="button" class="btn btn-primary" id="btnsubmit" onclick="getall()">送出並修改</button> *@
            <a href="https://localhost:7168/admin/gymreviewlist" class="btn btn-primary">返回列表</a>
        </div>
    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title fs-5" id="staticBackdropLabel">確定修改場館</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
             確定要更改這個場館的資料?
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-primary" onclick="getall()">確定</button>
      </div>
    </div>
  </div>
</div>
@section Scripts {
    <script>
        const params = new URLSearchParams(window.location.search);
        const gymId = params.get('id');
        let url = 'https://localhost:7199/api/AdminGymlist/' + gymId;
        let url2 = 'https://localhost:7199/api/GymList/' + gymId;
        const GymName = document.getElementById('GymName');
        const starttime = document.getElementById('start_time');
        const endtime = document.getElementById('end_time');
        const GymAddress = document.getElementById('GymAddress');
        const GymPark = document.getElementById('GymPark');
        const GymPhone = document.getElementById('GymPhone');
        const GymTraffic = document.getElementById('GymTraffic');
        const GymDescribe = document.getElementById('GymDescribe');
        const putData = {
            "regionId": 0,
            "gymRegion": "",
            "gymName": "",
            "gymAddress": "",
            "gymPhone": "",
            "gymPhoto": "",
            "gymPark": "",
            "gymTraffic": "",
            "gymDescribe": "",
            "start_time": "00:00",
            "end_time": "01:00",
            "imageBase64": ""
        }
        //獲取所有資料
        function getall() {
            if (putData.gymName == "") { alert('請填寫場館名稱'); return; }
            if (putData.gymAddress == "") { alert('請填寫地址'); return; }
            if (putData.gymPhone == "") { alert('請填寫電話'); return; }
            if (putData.gymDescribe == "") { alert('請填寫場館簡介'); return; }
            putData.gymName = GymName.value;
            putData.gymAddress = GymAddress.value;
            putData.gymPhone = GymPhone.value;
            putData.gymDescribe = GymDescribe.value;
            putData.gymPark = GymPark.value;
            putData.gymTraffic = GymTraffic.value;
            putData.gymRegion = regions.value;
            putData.start_time = start_time.value;
            putData.end_time = end_time.value;
            console.log(putData);
            editGyms();
        }
        //載入場館資料
        const loadProduct = async () => {
            console.log('url=', url);
            let response = await fetch(url);
            let data = await response.json();
            console.log(data);

            putData.start_time = data.starttime;
            putData.end_time = data.end_time;
            putData.gymName = data.gymName;
            putData.gymAddress = data.gymAddress;
            putData.gymPhone = data.gymPhone;
            putData.gymPhoto = data.gymPhoto;
            putData.gymPark = data.gymPark;
            putData.gymTraffic = data.gymTraffic;
            putData.gymDescribe = data.gymDescribe;

            GymName.value = data.gymName;
            starttime.value = data.start_time;
            endtime.value = data.end_time;
            GymAddress.value = data.gymAddress;
            GymPhone.value = data.gymPhone;
            GymPark.value = data.gymPark;
            GymTraffic.value = data.gymTraffic;
            GymDescribe.value = data.gymDescribe;
            document.getElementById('GymPhotoimage').src = `data:image/jpeg;base64,${data.gymPhoto}`;
        }
        loadCities();
        populateTimeOptions();

        // Function to load cities and populate dropdown
        async function loadCities(selectedCityId) {
            const citySelect = document.getElementById('citys');
            try {
                const response = await fetch("https://localhost:7199/api/Region");
                if (!response.ok) {
                    throw new Error('Failed to fetch cities');
                }
                const cities = await response.json();

                // Clear existing options
                citySelect.innerHTML = '';

                // Track added cities to avoid duplicates
                const addedCities = new Set();

                // Populate cities dropdown
                cities.forEach(city => {
                    if (!addedCities.has(city.cityId)) {
                        const option = document.createElement('option');
                        option.value = city.cityId;
                        option.textContent = city.city;
                        if (city.cityId === selectedCityId) {
                            option.selected = true; // Select the option that matches the gym's city
                        }
                        citySelect.appendChild(option);
                        addedCities.add(city.cityId);
                    }
                });

                // Trigger change event to load regions based on selected city
                citySelect.dispatchEvent(new Event('change'));
            } catch (error) {
                console.error('Error loading cities:', error);
            }
        }

        // Event listener for city selection change
        document.getElementById('citys').addEventListener('change', async function () {
            const selectedCityId = this.value;
            await loadRegions(selectedCityId);
        });

        // Function to load regions and populate dropdown
        async function loadRegions(cityId) {
            const regionSelect = document.getElementById('regions');
            try {
                const response = await fetch(`https://localhost:7199/api/Region/`);
                if (!response.ok) {
                    throw new Error('Failed to fetch regions');
                }
                const regions = await response.json();

                // Clear existing options
                regionSelect.innerHTML = '';

                // Populate regions dropdown
                regions.forEach(region => {
                    const option = document.createElement('option');
                    option.value = region.regionId;
                    option.textContent = region.region;
                    regionSelect.appendChild(option);
                });
            } catch (error) {
                console.error('Error loading regions:', error);
            }
        }

        // Function to populate time options
        function populateTimeOptions() {
            const startSelect = document.getElementById('start_time');
            const endSelect = document.getElementById('end_time');

            // Example: Populate time options from 00:00 to 23:59
            for (let hour = 0; hour < 24; hour++) {
                for (let minute = 0; minute < 60; minute += 30) {
                    const formattedHour = ('0' + hour).slice(-2);
                    const formattedMinute = ('0' + minute).slice(-2);
                    const timeString = `${formattedHour}:${formattedMinute}`;
                    const option = new Option(timeString, timeString);
                    startSelect.appendChild(option);
                    endSelect.appendChild(option.cloneNode(true)); // Clone options for end time
                }
            }
        }

        //預覽選擇影像&轉成base64
        document.getElementById('GymPhoto').addEventListener('change', function (event) {
            const fileInput = event.target;
            const files = fileInput.files;
            const preview = document.getElementById('GymPhoto2');
            if (files.length > 0) {
                const file = files[0];
                const reader = new FileReader();
                reader.onload = function (e) {
                    preview.src = e.target.result;
                };
                reader.readAsDataURL(file);

                const byteReader = new FileReader();
                byteReader.onload = function (e) {
                    const arrayBuffer = e.target.result;
                    const byteArray = new Uint8Array(arrayBuffer);
                    const base64String = btoa(String.fromCharCode.apply(null, byteArray));
                    postData.productImage = file.name;
                    postData.imageBase64 = base64String;
                    console.log('Image in base64:', base64String);
                };
                byteReader.readAsArrayBuffer(file);
            }
        });
        loadProduct();
        //儲存修改場館資料
        const editGyms = async () => {
            let response = await fetch(url2, {
                method: 'PUT',
                body: JSON.stringify(putData),
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            let data = await response.text();
            //alert('場館修改成功');
            setTimeout(() => {
                window.location.assign('https://localhost:7168/Admin/GymReviewList');
            }, 100);
        }
    </script>
}

